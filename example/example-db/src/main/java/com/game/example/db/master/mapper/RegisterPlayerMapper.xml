<?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper
                PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.game.example.db.master.mapper.RegisterPlayerMapper">

    <resultMap type="com.game.example.db.master.domain.RegisterPlayer" id="RegisterPlayerResult">
        <result property="uid"    column="uid"    />
        <result property="platformId"    column="platformId"    />
        <result property="channelId"    column="channelId"    />
        <result property="platformUid"    column="platformUid"    />
        <result property="createTime"    column="createTime"    />
        <result property="updateTime"    column="updateTime"    />
    </resultMap>

    <sql id="selectRegisterPlayerVo">
        select uid, platformId, channelId, platformUid, createTime, updateTime from register_player
    </sql>

    <select id="selectRegisterPlayerList" parameterType="com.game.example.db.master.domain.RegisterPlayer" resultMap="RegisterPlayerResult">
        <include refid="selectRegisterPlayerVo"/>
        <where>
            <if test="platformId != null  and platformId != ''"> and platformId = #{platformId}</if>
            <if test="channelId != null "> and channelId = #{channelId}</if>
            <if test="platformUid != null  and platformUid != ''"> and platformUid = #{platformUid}</if>
            <if test="createTime != null "> and createTime = #{createTime}</if>
            <if test="updateTime != null "> and updateTime = #{updateTime}</if>
        </where>
    </select>

    <select id="selectRegisterPlayerByUid" parameterType="Long" resultMap="RegisterPlayerResult">
        <include refid="selectRegisterPlayerVo"/>
        where uid = #{uid}
    </select>

    <insert id="insertRegisterPlayer" parameterType="com.game.example.db.master.domain.RegisterPlayer" useGeneratedKeys="true" keyProperty="uid">
        insert into register_player
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="platformId != null and platformId != ''">platformId,</if>
            <if test="channelId != null">channelId,</if>
            <if test="platformUid != null and platformUid != ''">platformUid,</if>
            <if test="createTime != null">createTime,</if>
            <if test="updateTime != null">updateTime,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="platformId != null and platformId != ''">#{platformId},</if>
            <if test="channelId != null">#{channelId},</if>
            <if test="platformUid != null and platformUid != ''">#{platformUid},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateRegisterPlayer" parameterType="com.game.example.db.master.domain.RegisterPlayer">
        update register_player
        <trim prefix="SET" suffixOverrides=",">
            <if test="platformId != null and platformId != ''">platformId = #{platformId},</if>
            <if test="channelId != null">channelId = #{channelId},</if>
            <if test="platformUid != null and platformUid != ''">platformUid = #{platformUid},</if>
            <if test="createTime != null">createTime = #{createTime},</if>
            <if test="updateTime != null">updateTime = #{updateTime},</if>
        </trim>
        where uid = #{uid}
    </update>

    <delete id="deleteRegisterPlayerByUid" parameterType="Long">
        delete from register_player where uid = #{uid}
    </delete>

    <delete id="deleteRegisterPlayerByUids" parameterType="String">
        delete from register_player where uid in
        <foreach item="uid" collection="array" open="(" separator="," close=")">
            #{uid}
        </foreach>
    </delete>

</mapper>
